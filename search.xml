<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于hexo创建新文章</title>
    <url>/2019/12/09/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E6%96%B0%E6%96%87%E7%AB%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="创建新文章"><a href="#创建新文章" class="headerlink" title="创建新文章"></a>创建新文章</h3><p>根目录命令行输入<code>hexo new &lt;模板&gt; &lt;文章名&gt;</code>新建文章</p>
<p>其中<code>&lt;模板&gt;</code>在<code>scaffolds</code>中，默认情况下有三个模板<code>post</code>、<code>draft</code>、<code>page</code></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>功能</th>
<th>路径</th>
</tr>
</thead>
<tbody><tr>
<td>post</td>
<td>新建文章</td>
<td>/source/_posts/</td>
</tr>
<tr>
<td>draft</td>
<td>新建草稿</td>
<td>/source/_drafts/</td>
</tr>
<tr>
<td>page</td>
<td>新建页面（标签页，分类页等）</td>
<td>/source/</td>
</tr>
</tbody></table>
<p>通常情况下使用<code>hexo new post</code>即可，注意这里的<code>title</code>不是文章名，具体文章中显示的文章标题可以在文章文件中修改，例如：我这里新建一篇文章，title为article</p>
<p>命令行输入<code>hexo new post article</code></p>
<p>此时在<code>source/_posts/</code>文件夹中多了一个<code>article.md</code>文件。打开可以看到如下内容：</p>
<p>[图片上传失败…(image-3f21de-1544088714291)]</p>
<p>文章内容中两条<code>---</code>之间的内容为文章的配置内容，可以在其中设置标签、分类等。其中的<code>title</code>为文章发布后文章页面显示的标题，例如我们修改一下tittle为：Hexo博客文章发布</p>
<p>而<code>.md</code>文件的名字，也就是我们新建文章时输入的名字，是作为文章页面链接中显示的名字，例如，本篇文章的文件名为：<code>article.md</code>，文章内设置的文章标题为<code>Hexo博客新建文章并发布</code>，那么本篇文章的链接就是<code>https://www.lixint.me/article.html</code></p>
<h4 id="文章模板"><a href="#文章模板" class="headerlink" title="文章模板"></a>文章模板</h4><p>在新建文章中使用的<code>post</code>参数，就是模板的名称，在使用<code>hexo new post &lt;文件名&gt;</code>命令进行新建文章时，系统会自动在<code>scaffolds</code>文件夹中搜寻名为<code>post</code>的文件，根据其中的内容生成新的<code>.md</code>文章文件。后续随着配置项的增多，可以自行设置不同类型的模板。例如本篇文章的模板如下：</p>
<p>[图片上传失败…(image-55e677-1544088714292)]</p>
<p>其中的<code>title</code>跟<code>data</code>会在生成文件时自动填写。利用此模板生成的文章文件，只需要进行对应项目的填写即可。例如本篇文章的配置信息如下：</p>
<p>[图片上传失败…(image-5cf46e-1544088714292)]</p>
<h4 id="给文章添加分类和模板"><a href="#给文章添加分类和模板" class="headerlink" title="给文章添加分类和模板"></a>给文章添加分类和模板</h4><p>通过对文件头部配置信息中<code>tags</code> 与<code>categories</code>项的修改可以设置文章的标签及分类。</p>
<p>其中标签可以按格式贴现设置多个：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">title</span>: <span class="selector-tag">Hexo</span>博客新建文章并发布</span><br><span class="line"><span class="selector-tag">date</span>: 2018<span class="selector-tag">-12-06</span> 12<span class="selector-pseudo">:16</span><span class="selector-pseudo">:12</span></span><br><span class="line"><span class="selector-tag">tags</span>:</span><br><span class="line"> <span class="selector-tag">-</span> <span class="selector-tag">Hexo</span></span><br><span class="line"> <span class="selector-tag">-</span> <span class="selector-tag">Markdown</span></span><br><span class="line"><span class="selector-tag">categories</span>: 搭建博客</span><br></pre></td></tr></table></figure>

<h4 id="在博文中添加图片"><a href="#在博文中添加图片" class="headerlink" title="在博文中添加图片"></a>在博文中添加图片</h4><p>目前有三种方法像博文中添加图片：</p>
<h5 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h5><p>命令行输入<code>npm install hexo-asset-image --save</code>安装插件</p>
<p>在<code>根目录/source</code>目录下新建一个<code>img</code>文件夹，将需要插入的图片放到里面</p>
<p>在文章中引用图片时图片使用格式<code>[图片上传失败...(image-3a4109-1544088714292)]</code>进行引用图片。</p>
<h5 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h5><p>在<a style="color:#9900ff"><strong>博客配置文件</strong></a>中搜索<code>post_asset_folder</code>项，设置为<code>true</code></p>
<p>[图片上传失败…(image-1a1aa7-1544088714292)]</p>
<p>这样在创建文章时会自动在文章<code>.md</code>所在目录<code>/source/_posts</code>文件夹内生成一个与文章同名的文件夹。例如新建文章<code>hexo new post example</code>则会生成一个<code>example.md</code>文件与一个名为<code>example</code>的文件夹。</p>
<p>把example这个博文需要展示的图片放在example文件夹目录下；</p>
<p>文章内使用<code>[% asset_img slug [title] %]</code>（将方括号][替换为花括号}{）的格式进行插入图片，例如我要插入一个名为<code>1.jpg</code>的图片，写文章时就应该填写</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">`<span class="selector-attr">[% asset_img 1.jpg 图片1 %]</span>`</span><br></pre></td></tr></table></figure>



<h2 id="最后记得输入"><a href="#最后记得输入" class="headerlink" title="最后记得输入"></a>最后记得输入</h2><p>hexo clean</p>
<p>hexo generate</p>
<p>hexo deploy</p>
]]></content>
      <categories>
        <category>网站</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>霍奇猜想-简介</title>
    <url>/2019/11/21/%E9%9C%8D%E5%A5%87%E7%8C%9C%E6%83%B3-%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="霍奇猜想"><a href="#霍奇猜想" class="headerlink" title="霍奇猜想"></a>霍奇猜想</h1><h3 id="1-霍奇猜想定义"><a href="#1-霍奇猜想定义" class="headerlink" title="1.霍奇猜想定义"></a>1.霍奇猜想定义</h3><p>​    霍奇猜想(Hodge Conjecture)在非奇异复射影代数簇上，任一霍奇类是代数闭链类的有理线性组合。</p>
<h6 id="代数簇：19世纪，数学家尝试推广笛卡尔的方法，他们从一些代数方程入手，把这些方程的解定义为“几何”对象。"><a href="#代数簇：19世纪，数学家尝试推广笛卡尔的方法，他们从一些代数方程入手，把这些方程的解定义为“几何”对象。" class="headerlink" title="代数簇：19世纪，数学家尝试推广笛卡尔的方法，他们从一些代数方程入手，把这些方程的解定义为“几何”对象。"></a>代数簇：19世纪，数学家尝试推广笛卡尔的方法，他们从一些代数方程入手，把这些方程的解定义为“几何”对象。</h6><h6 id="非奇异复射影代数簇：-指代的是由一个代数方程的解所生成的光滑的多维物体的“表面”。"><a href="#非奇异复射影代数簇：-指代的是由一个代数方程的解所生成的光滑的多维物体的“表面”。" class="headerlink" title="非奇异复射影代数簇： 指代的是由一个代数方程的解所生成的光滑的多维物体的“表面”。"></a>非奇异复射影代数簇： <strong>指代的是由一个代数方程的解所生成的光滑的多维物体的“表面”。</strong></h6><h6 id="代数闭链类："><a href="#代数闭链类：" class="headerlink" title="代数闭链类："></a>代数闭链类：</h6><h3 id="2-霍奇猜想的理解与引出"><a href="#2-霍奇猜想的理解与引出" class="headerlink" title="2.霍奇猜想的理解与引出"></a>2.霍奇猜想的理解与引出</h3><p>​    通俗的话来说，就是将一块复杂的拼图分解成一块又一块的小拼图的过程。比如拆建楼房的时候，从外部我们很难看清这栋楼的形状和构造，但是如果我们把楼房简化成透视图就能很清楚的了解这栋楼的信息。</p>
<p>​    霍奇猜想主要就是将复杂的几何问题简化成简单的几何问题来解决的途径和方法。<em>把一些复杂的东西简化后，按照他们相同的部分进行分类，方便数学家们对一些负责的东西进行归纳处理。</em></p>
<p>​    基本想法：问在怎么样的基础上，我们可以把给定对象的形状通过把维数不断增加的简单几何营造块粘合在一起来形成。最终导致一些强有力的工具，是数学家在对他们研究中所遇到的形形色色的对象进行分类时取得巨大的进展。但是在这一推广中，程序的几何出发点变得模糊起来。在某种意义下，必须机上某些没有任何几何解释的不见。</p>
<p>​    霍奇猜想断言，对于所谓射影代数簇这种特别完美的空间类型来说，称作霍奇闭链的部件实际上是称作代数闭链的几何部件的（有理线性）组合。</p>
<p>​        <em>一个复代数簇是由一个代数方程组的复数解所定义的一个多维“曲面”。</em><br>　　<em>如果定义一个复代数簇的方程组的解仅依赖于有关数的比，数学家就称这个复代数簇是射影的。</em></p>
<p>　　<em>如果一个簇作为“曲面”是光滑的，他们就称这个簇是非奇异的。</em><br>　　<em>因此，一个非奇异射影复代数簇就是一种特殊类型的复流形。</em></p>
<figure class="highlight elm"><table><tr><td class="code"><pre><span class="line">霍奇意识到他可以把来自于分析的方法应用于这些代数流形。特别是，他意识到由一个非奇异射影复代数簇所产生的微分形式的有理上同调类可以被看作是拉普拉斯方程的解。</span><br></pre></td></tr></table></figure>

<p>　　霍奇的观察结果使得有可能把这样的一个类写成一些特殊分量的一个和，这种特殊分量称作调和(p，q)形式。它们是可以由p个复变量和q个共轭复变量所规定的拉普拉斯方程的解。而且，每个（p维的）代数上同调类给出了一个(p，p)形式。 </p>
<h6 id="复流形：-20世纪早期，数学家把黎显面的思想推广成一个高度抽象的概念——复流形，即黎曼面的一个有着一种复杂拓扑结构的多维模拟物。这样一个流形具备了一种能确保复解析函数的概念有意义的结构。特别是，有可能定义所谓的微分形式，即把通常（实数）微积分中函数f的微分df推广到多维情况的产物。"><a href="#复流形：-20世纪早期，数学家把黎显面的思想推广成一个高度抽象的概念——复流形，即黎曼面的一个有着一种复杂拓扑结构的多维模拟物。这样一个流形具备了一种能确保复解析函数的概念有意义的结构。特别是，有可能定义所谓的微分形式，即把通常（实数）微积分中函数f的微分df推广到多维情况的产物。" class="headerlink" title="复流形： 20世纪早期，数学家把黎显面的思想推广成一个高度抽象的概念——复流形，即黎曼面的一个有着一种复杂拓扑结构的多维模拟物。这样一个流形具备了一种能确保复解析函数的概念有意义的结构。特别是，有可能定义所谓的微分形式，即把通常（实数）微积分中函数f的微分df推广到多维情况的产物。"></a>复流形： 20世纪早期，数学家把黎显面的思想推广成一个高度抽象的概念——复流形，即黎曼面的一个有着一种复杂拓扑结构的多维模拟物。这样一个流形具备了一种能确保复解析函数的概念有意义的结构。特别是，有可能定义所谓的微分形式，即把通常（实数）微积分中函数f的微分df推广到多维情况的产物。</h6><p><em>参考文献：</em></p>
<p>[1] <a href="http://www.360doc.com/content/18/0801/21/11548039_775011492.shtml" target="_blank" rel="noopener">千年之谜 霍奇猜想：通天巴别塔</a></p>
<p>[2] <a href="http://blog.sciyard.com/web/ShowAllArticle.aspx?id=4714&&userid=65000" target="_blank" rel="noopener">霍奇猜想：复流形</a> </p>
]]></content>
      <categories>
        <category>学习</category>
      </categories>
      <tags>
        <tag>数学</tag>
        <tag>霍奇猜想</tag>
      </tags>
  </entry>
  <entry>
    <title>狗屁不通文章生成器</title>
    <url>/2019/11/14/%E7%8B%97%E5%B1%81%E4%B8%8D%E9%80%9A%E6%96%87%E7%AB%A0%E7%94%9F%E6%88%90%E5%99%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="狗屁不通文章生成器"><a href="#狗屁不通文章生成器" class="headerlink" title="狗屁不通文章生成器"></a>狗屁不通文章生成器</h1><p><img src="C:%5CUsers%5Cyuanhao%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191114152207619.png" alt="image-20191114152207619"></p>
<h5 id="一个比较简单的python项目，就不去分析它的代码了"><a href="#一个比较简单的python项目，就不去分析它的代码了" class="headerlink" title="一个比较简单的python项目，就不去分析它的代码了"></a>一个比较简单的python项目，就不去分析它的代码了</h5><p>  总而言之，挺二的………………</p>
<p><em>上面是我亲测的一个数据：闭着眼睛读书</em>，能让文章读起来更流畅，其他的好的词语等待着你去发现嗷~</p>
<p>项目网址：<a href="https://github.com/menzi11/BullshitGenerator" target="_blank" rel="noopener"> https://github.com/menzi11/BullshitGenerator </a></p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Firstday</title>
    <url>/2019/11/14/Firstday/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>  今天是测试的第一天，目前博客功能还未完善，有待更新。</p>
]]></content>
      <categories>
        <category>杂项</category>
      </categories>
      <tags>
        <tag>生活</tag>
      </tags>
  </entry>
</search>
